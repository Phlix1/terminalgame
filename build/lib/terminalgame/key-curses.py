import terminalgame.event as event
from terminalgame.locals import *
import terminalgame
import time
import curses
import _thread as thread
keytable = {
    ord('a') : K_a,
    ord('b') : K_b,
    ord('c') : K_c,
    ord('d') : K_d,
    ord('e') : K_e,
    ord('f') : K_f,
    ord('g') : K_g,
    ord('h') : K_h,
    ord('i') : K_i,
    ord('j') : K_j,
    ord('k') : K_k,
    ord('l') : K_l,
    ord('m') : K_m,
    ord('n') : K_n,
    ord('o') : K_o,
    ord('p') : K_p,
    ord('q') : K_q,
    ord('r') : K_r,
    ord('s') : K_s,
    ord('t') : K_t,
    ord('u') : K_u,
    ord('v') : K_v,
    ord('w') : K_w,
    ord('x') : K_x,
    ord('y') : K_y,
    ord('z') : K_z,
    ord('A') : K_A,
    ord('B') : K_B,
    ord('C') : K_C,
    ord('D') : K_D,
    ord('E') : K_E,
    ord('F') : K_F,
    ord('G') : K_G,
    ord('H') : K_H,
    ord('I') : K_I,
    ord('J') : K_J,
    ord('K') : K_K,
    ord('L') : K_L,
    ord('M') : K_M,
    ord('N') : K_N,
    ord('O') : K_O,
    ord('P') : K_P,
    ord('Q') : K_Q,
    ord('R') : K_R,
    ord('S') : K_S,
    ord('T') : K_T,
    ord('U') : K_U,
    ord('V') : K_V,
    ord('W') : K_W,
    ord('X') : K_X,
    ord('Y') : K_Y,
    ord('Z') : K_Z,
    ord('0') : K_0,
    ord('1') : K_1,
    ord('2') : K_2,
    ord('3') : K_3,
    ord('4') : K_4,
    ord('5') : K_5,
    ord('6') : K_6,
    ord('7') : K_7,
    ord('8') : K_8,
    ord('9') : K_9,
    ord('!') : K_EXCLAIM,
    ord('"') : K_QUOTEDBL,    
    ord('#') : K_HASH,
    ord('$') : K_DOLLAR,
    ord('&') : K_AMPERSAND,
    ord('(') : K_LEFTPAREN,
    ord(')') : K_RIGHTPAREN,    
    ord('*') : K_ASTERISK, 
    ord('+') : K_PLUS,
    ord(',') : K_COMMA,
    ord(':') : K_COLON,
    ord(';') : K_SEMICOLON,
    ord('<') : K_LESS,
    ord('=') : K_EQUALS,
    ord('>') : K_GREATER,
    ord('?') : K_QUESTION,
    ord('@') : K_AT,
    ord('^') : K_CARET,
    ord('_') : K_UNDERSCORE,
    ord('`') : K_BACKQUOTE, 
    ord('/') : K_SLASH,       		
    ord('.') : K_PERIOD,      
    ord('-') : K_MINUS,     
    ord(',') : K_COMMA,    
    ord(';') : K_SEMICOLON,   
    ord('`') : K_BACKQUOTE,  
    ord('\\') : K_BACKSLASH,   
    ord('[') : K_LEFTBRACKET, 
    ord(']') : K_RIGHTBRACKET,
    ord("'") : K_QUOTEDBL,
    curses.KEY_MIN : k_MIN,
    curses.KEY_BREAK : K_BREAK,
    curses.KEY_DOWN : K_DOWN,
    curses.KEY_UP : K_UP,
    curses.KEY_LEFT : K_LEFT,
    curses.KEY_RIGHT : K_RIGHT,
    curses.KEY_HOME : K_HOME,
    curses.KEY_BACKSPACE : K_BACKSPACE,
    curses.KEY_F1 : K_F1,
    curses.KEY_F2 : K_F2,
    curses.KEY_F3 : K_F3,
    curses.KEY_F4 : K_F4,
    curses.KEY_F5 : K_F5,
    curses.KEY_F6 : K_F6,
    curses.KEY_F7 : K_F7,
    curses.KEY_F8 : K_F8,
    curses.KEY_F9 : K_F9,
    curses.KEY_F10 : K_F10,
    curses.KEY_F11 : K_F11,
    curses.KEY_F12 : K_F12,
    curses.KEY_DL : K_DELETELINE,
    curses.KEY_IL : K_INSERTLINE,
    curses.KEY_DC : K_DELETECHARACTER,
    curses.KEY_IC : K_INSERTCHAR,
    curses.KEY_EIC : K_EXITINSERTCHAR,
    curses.KEY_CLEAR : K_CLEARSCREEN,
    curses.KEY_EOS : K_CLEARENDSCREEN,
    curses.KEY_EOL : K_CLEARENDLINE,
    curses.KEY_SF : K_SCROLLLINEFORWARD,
    curses.KEY_SR : K_SCROLLLINEBACKWARD,
    curses.KEY_NPAGE : K_NEXTPAGE,
    curses.KEY_PPAGE : K_PREVIOUSPAGE,
    curses.KEY_STAB : K_SETTAB,
    curses.KEY_CTAB : K_CLEARTAB,
    curses.KEY_CATAB : K_CLEARALLTABS,
    curses.KEY_ENTER : K_ENTERORSEND,
    curses.KEY_SRESET : K_SOFTRESET,
    curses.KEY_RESET : K_RESETORHARD,
    curses.KEY_PRINT : K_PRINT,
    curses.KEY_LL : K_HOMEDOWNORBOTTOM,
    curses.KEY_A1 : K_UPPERLEFTKEYPAD,
    curses.KEY_A3 : K_UPPERRIGHTKEYPAD,
    curses.KEY_B2 : K_CENTERKEYPAD,
    curses.KEY_C1 : K_LOWERLEFTKEYPAD,
    curses.KEY_C3 : K_LOWERRIGHTKEYPAD,
    curses.KEY_BTAB : K_BACKTAB,
    curses.KEY_BEG : K_BEG,
    curses.KEY_CANCEL : K_CANCEL,
    curses.KEY_CLOSE : K_CLOSE,
    curses.KEY_COMMAND : K_CMD,
    curses.KEY_COPY : K_COPY,
    curses.KEY_CREATE : K_CREATE,
    curses.KEY_END : K_END,
    curses.KEY_EXIT : K_EXIT,
    curses.KEY_FIND : K_FIND,
    curses.KEY_HELP : K_HELP,
    curses.KEY_MARK : K_MARK,
    curses.KEY_MESSAGE : K_MESSAGE,
    curses.KEY_MOVE : K_MOVE,
    curses.KEY_NEXT : K_NEXT,
    curses.KEY_OPEN : K_OPEN,
    curses.KEY_OPTIONS : K_OPTIONS,
    curses.KEY_PREVIOUS : K_PREV,
    curses.KEY_REDO : K_REDO,
    curses.KEY_REFERENCE : K_REF,
    curses.KEY_REFRESH : K_REFRESH,
    curses.KEY_REPLACE : K_REPLACE,
    curses.KEY_RESTART : K_RESTART,
    curses.KEY_RESUME : K_RESUME,
    curses.KEY_SAVE : K_SAVE,
    curses.KEY_SBEG : K_SHIFTEDBEG,
    curses.KEY_SCANCEL : K_SHIFTEDCANCEL,
    curses.KEY_SCOMMAND : K_SHIFTEDCOMMAND,
    curses.KEY_SCOPY : K_SHIFTEDCOPY,
    curses.KEY_SCREATE : K_SHIFTEDCREATE,
    curses.KEY_SDC : K_SHIFTEDDELETECHAR,
    curses.KEY_SDL : K_SHIFTEDDELETELINE,
    curses.KEY_SELECT : K_SELECT,
    curses.KEY_SEND : K_SHIFTEDEND,
    curses.KEY_SEOL : K_SHIFTEDCLEARLINE,
    curses.KEY_SEXIT : K_SHIFTEDEXIT,
    curses.KEY_SFIND : K_SHIFTEDFIND,
    curses.KEY_SHELP : K_SHIFTEDHELP,
    curses.KEY_SHOME : K_SHIFTEDHOME,
    curses.KEY_SIC : K_SHIFTEDINPUT,
    curses.KEY_SLEFT : K_SHIFTEDLEFTARROW,
    curses.KEY_SMESSAGE : K_SHIFTEDMESSAGE,
    curses.KEY_SMOVE : K_SHIFTEDMOVE,
    curses.KEY_SNEXT : K_SHIFTEDNEXT,
    curses.KEY_SOPTIONS : K_SHIFTEDOPTIONS,
    curses.KEY_SPREVIOUS : K_SHIFTEDPREV,
    curses.KEY_SPRINT : K_SHIFTEDPRINT,
    curses.KEY_SREDO : K_SHIFTEDREDO,
    curses.KEY_SREPLACE : K_SHIFTEDREPLACE,
    curses.KEY_SRIGHT : K_SHIFTEDRIGHTARROW,
    curses.KEY_SRSUME : K_SHIFTEDRESUME,
    curses.KEY_SSAVE : K_SHIFTEDSAVE,
    curses.KEY_SSUSPEND : K_SHIFTEDSUSPEND,
    curses.KEY_SUNDO : K_SHIFTEDUNDO,
    curses.KEY_SUSPEND : K_SUSPEND,
    curses.KEY_UNDO : K_UNDO,
    curses.KEY_MAX : K_MAXIMUMKEYVALUE
}

def monitor():
    while key_flag:
        key = terminalgame.display.win.getch()
        if key in keytable.keys():
            type = KEYDOWN
            dict={} #unicode, key
            dict['key'] = keytable[key]
            dict['unicode'] = key
            event.post(event.Event(type,dict))

def key_monitor_start():
    thread.start_new_thread(monitor, ())
def key_monitor_stop():
    key_flag = False

def name(key):
    pass

def get_pressed():
    pass